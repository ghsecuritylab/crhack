/*****************************************************************************/
/*                                                  ###                      */
/*       #####          ###    ###                  ###  CREATE: 2010-08-11  */
/*     #######          ###    ###      [KRNL]      ###  ~~~~~~~~~~~~~~~~~~  */
/*    ########          ###    ###                  ###  MODIFY: XXXX-XX-XX  */
/*    ####  ##          ###    ###                  ###  ~~~~~~~~~~~~~~~~~~  */
/*   ###       ### ###  ###    ###    ####    ####  ###   ##  +-----------+  */
/*  ####       ######## ##########  #######  ###### ###  ###  |  A NEW C  |  */
/*  ###        ######## ########## ########  ###### ### ###   | FRAMEWORK |  */
/*  ###     ## #### ### ########## ###  ### ###     ######    |  FOR ALL  |  */
/*  ####   ### ###  ### ###    ### ###  ### ###     ######    | PLATFORMS |  */
/*  ########## ###      ###    ### ######## ####### #######   |  AND ALL  |  */
/*   #######   ###      ###    ### ########  ###### ###  ###  | COMPILERS |  */
/*    #####    ###      ###    ###  #### ##   ####  ###   ##  +-----------+  */
/*  =======================================================================  */
/*  >>>>>>>>>>>>>>>>>> CrHack NXP PCF8583 驱动函数库模板 <<<<<<<<<<<<<<<<<<  */
/*  =======================================================================  */
/*****************************************************************************/

#undef  _I2C_PAGE_
#define _I2C_SIZE_  256

#if !defined(__no_pcf8583_read)
    #define e24cxx_read     pcf8583_read
#endif
#if !defined(__no_pcf8583_write)
    #define e24cxx_write    pcf8583_write
#endif

#include "24cxx.inl"

#if !defined(__no_pcf8583_init_time)
/*
=======================================
    PCF8583 初始设置
=======================================
*/
CR_API bool_t
pcf8583_init_time (
  __CR_IN__ byte_t  devs
    )
{
    byte_t  val = 0x00;

    if (i2c_write_device(devs, 0, &val, 1) != 1)
        return (FALSE);
    return (TRUE);
}

#endif  /* !__no_pcf8583_init_time */

#if !defined(__no_pcf8583_get_time)
/*
=======================================
    PCF8583 获取时间
=======================================
*/
CR_API bool_t
pcf8583_get_time (
  __CR_IN__ byte_t      devs,
  __CR_OT__ sDATETIME*  dttm
    )
{
    byte_t  buf[5];

    if (i2c_read_device(devs, 2, buf, 5) != 5)
        return (FALSE);
    dttm->week = buf[4] >> 5;
    buf[2] &= 0x3F; buf[3] &= 0x3F; buf[4] &= 0x1F;
    dttm->second = (buf[0] >> 4) * 10 + (buf[0] & 0x0F);
    dttm->minute = (buf[1] >> 4) * 10 + (buf[1] & 0x0F);
    dttm->hour   = (buf[2] >> 4) * 10 + (buf[2] & 0x0F);
    dttm->day    = (buf[3] >> 4) * 10 + (buf[3] & 0x0F);
    dttm->month  = (buf[4] >> 4) * 10 + (buf[4] & 0x0F);
    return (TRUE);
}

#endif  /* !__no_pcf8583_get_time */

#if !defined(__no_pcf8583_set_time)
/*
=======================================
    PCF8583 设置时间
=======================================
*/
CR_API bool_t
pcf8583_set_time (
  __CR_IN__ byte_t              devs,
  __CR_IN__ const sDATETIME*    dttm
    )
{
    byte_t  buf[6];

    buf[0]  = 0x00;
    buf[1]  = (byte_t)(((dttm->second /  10) << 4) | (dttm->second % 10));
    buf[2]  = (byte_t)(((dttm->minute /  10) << 4) | (dttm->minute % 10));
    buf[3]  = (byte_t)(((dttm->hour   /  10) << 4) | (dttm->hour   % 10));
    buf[4]  = (byte_t)(((dttm->day    /  10) << 4) | (dttm->day    % 10));
    buf[4] |= (byte_t) ((dttm->year   &   3) << 6);
    buf[5]  = (byte_t)(((dttm->month  /  10) << 4) | (dttm->month  % 10));
    buf[5] |= (byte_t)  (date_get_week(dttm) << 5);
    return ((i2c_write_device(devs, 1, buf, 6) != 6) ? FALSE : TRUE);
}

#endif  /* !__no_pcf8583_set_time */

#if !defined(__no_pcf8583_ram_read)
/*
=======================================
    读取 PCF8583 RAM 地址数据
=======================================
*/
CR_API i2c_leng_t
pcf8583_ram_read (
  __CR_IN__ byte_t      devs,
  __CR_IN__ i2c_addr_t  addr,
  __CR_OT__ void_t*     data,
  __CR_IN__ i2c_leng_t  size
    )
{
    if (size == 0 || addr >= 240 || size > 240 - addr)
        return (0);
    return (i2c_read_device(devs, addr + 16, data, size));
}

#endif  /* !__no_pcf8583_ram_read */

#if !defined(__no_pcf8583_ram_write)
/*
=======================================
    写入 PCF8583 RAM 地址数据
=======================================
*/
CR_API i2c_leng_t
pcf8583_ram_write (
  __CR_IN__ byte_t          devs,
  __CR_IN__ i2c_addr_t      addr,
  __CR_IN__ const void_t*   data,
  __CR_IN__ i2c_leng_t      size
    )
{
    if (size == 0 || addr >= 240 || size > 240 - addr)
        return (0);
    return (i2c_write_device(devs, addr + 16, data, size));
}

#endif  /* !__no_pcf8583_ram_write */

/*****************************************************************************/
/* _________________________________________________________________________ */
/* uBMAzRBoAKAHaACQD6FoAIAPqbgA/7rIA+5CM9uKw8D4Au7u7mSIJ0t18mYz0mYz9rAQZCgHc */
/* wRIZIgHZovGBXUAZg+v0GbB+gRmgcJ7BAAAisIlAwB1Av7LSHUC/s9IdQL+w0h1Av7HZkZmgf */
/* 4JLgIAdb262gPsqAh0+zP/uQB9ZYsFZYktq+L3sMi/AAK7gAKJAUtLdfq5IANXvT8BiQzfBIv */
/* FLaAAweAEmff53wb+Adjx3kQE2xwy5Io8ithkigcFgACJBN8E3sneNvwB2xyLHDkdfA2JHSyA */
/* adtAAQPdZYgHR0dNdbZfSYP5UHWr/kQEtAHNFg+Eef/DWAKgDw== |~~~~~~~~~~~~~~~~~~~ */
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ >>> END OF FILE <<< */
/*****************************************************************************/
